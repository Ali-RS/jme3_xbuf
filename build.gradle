buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.6'
		classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
		classpath "org.xtend:xtend-gradle-plugin:0.3.4"
	}
}

//------------------------------------------------------------------------------
// Global
// content of this section could be placed in an other script
//------------------------------------------------------------------------------

allprojects {
	group = "org.xbuf.jme3"
	version = "0.4.0"
	def description = 'xbuf lib and tools for jMonkeyEngine (jme3)'
}

subprojects {
	apply plugin: 'java' // assets are managed like java resource + code
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'

	repositories {
		mavenLocal()
		jcenter()
		maven { url "http://updates.jmonkeyengine.org/maven/"}
		maven { url "http://dl.bintray.com/davidb/jme3stuff" }
	}

	task sourcesJar(type: Jar) {
		from sourceSets.main.allSource
		classifier = 'sources'
	}

	def pomConfig = {
		licenses {
			license {
				name "Public domain (CC0-1.0)"
				url "http://creativecommons.org/publicdomain/zero/1.0/"
				distribution "repo"
			}
		}
		developers {
			developer {
				id "davidB"
				name "David Bernard"
			}
		}
	}

	publishing {
		publications {
			mavenStuff(MavenPublication) {
				from components.java
				artifact sourcesJar
				pom.withXml {
					def root = asNode()
					if (description) root.appendNode('description', project.description)
					root.children().last() + pomConfig
				}
			}
		}
	}


	bintray {
		user = bintray_user
		key = bintray_api_key

		publications = ['mavenStuff'] //When uploading Maven-based publication files
		//dryRun = true //Whether to run this as dry-run, without deploying
		publish = true //If version should be auto published after an upload
		pkg {
			repo = 'jme3stuff'
			name = project.name
			desc = project.description
			websiteUrl = "https://github.com/davidB/${rootProject.name}"
			issueTrackerUrl = "https://github.com/davidB/${rootProject.name}/issues"
			vcsUrl = "https://github.com/davidB/${rootProject.name}.git"
			licenses = ['CC0-1.0']
			labels = ['jme3']
			publicDownloadNumbers = true
			version {
				name = project.version
				vcsTag = project.version
			}
		}
	}
}
